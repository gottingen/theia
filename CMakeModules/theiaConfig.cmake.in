#
# Copyright 2023 The EA Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


# theia
# -----
#
# This is the cmake configuration file for theia library. It provides
# the following imported targets.
#
# ``theia::theia`` - the target for theia
#
# This target can be used to link with your application using the
# ``target_link_library`` command. Here is an example of how to use these
# targets in your application:
#
#   add_executable(mybinary source.cpp)
#   target_link_library(mybinary PRIVATE theia::theia)
#
# This example creates a mybinary executable from the source.cpp file and links
# against the theia library. Note you do *not* need to set the include
# directories as they are automatically included with the target.
#
# This is the recommended way of linking against theia
#
#
# Legacy Variables
# ----------------
#
# Defines the following variables:
# theia_INCLUDE_DIRS  - Path to theia include directory.
# theia_LIBRARIES     - Path to theia libraries used in link commands.
# theia_FOUND         - True if theia backend has been found.
#
# You may provide a hint to where theia's root directory may be located
# by setting theia_DIR. You do not need to set this if you installed
# theia using the official installers or the package manager(please submit
# a bug report if any issues). If CMake is unable to locate theia then
# set the theia_DIR to the directory of this file.
#
# If you are trying to link against a source build then this should be set to
# the build directory.

@PACKAGE_INIT@

set_and_check(theia_INCLUDE_DIRS @PACKAGE_INCLUDE_DIRS@)

set(theia_FOUND OFF)

if (NOT TARGET theia::theia AND
        NOT TARGET theia AND
        EXISTS @PACKAGE_CMAKE_DIR@/theiaTargets.cmake)
    include(@PACKAGE_CMAKE_DIR@/theiaTargets.cmake)
endif ()

if (TARGET theia::theia)
    get_property(configs TARGET theia::theia PROPERTY IMPORTED_CONFIGURATIONS)
    if(NOT configs)
        set(configs "NOCONFIG")
    endif()
    foreach(config IN LISTS configs)
        get_property(loc TARGET theia::theia PROPERTY IMPORTED_LOCATION_${config})

        # break if any of the imported configurations exist. All configs write to the same
        # location so they are not working as CMake intended. Its fine for single config
        # installers like ours.
        if(EXISTS ${loc})
            set(theia_BINARY_EXISTS TRUE)
            break()
        endif()
    endforeach()
endif ()

if ((TARGET theia::theia AND theia_BINARY_EXISTS) OR TARGET theia)
    set(theia_FOUND ON)
    if (TARGET theia AND NOT TARGET theia::theia)
        add_library(theia::theia ALIAS theia)
    endif ()
    set(theia_LIBRARIES theia::theia)
else ()
    set(theia_FOUND OFF)
endif ()
